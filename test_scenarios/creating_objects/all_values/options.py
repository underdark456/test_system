import random

from src.enum_types_constants import AlertModes, ControllerModes, ControlModes, \
    BindingModes, ModcodModes, DemodulatorInputModes, TdmaModcod, \
    IpScreeningModes, McastModes, SntpModes, SnmpModes, SnmpAuth, DhcpModes, RipModes, TcpaVersion, \
    LanCheckModes, CheckboxStr, AlertPriorityStr, AlertModesStr, \
    LatitudeModesStr, LongitudeModesStr, TdmaSearchModesStr, RxVoltageStr, DemodulatorInputModesStr, \
    TdmaInputModesStr, \
    ControllerModesStr, ControlModesStr, BindingModesStr, RollofModesStr, WbmModesStr, TtsModesStr, \
    TdmaAcmModesStr, LoadTypeModesStr, IpScreeningModesStr, SnmpModesStr, SnmpAuthStr, DhcpModesStr, RipModesStr, \
    McastModesStr, SntpModesStr, TcpaVersionStr, LanCheckModesStr, ModelTypesStr, DamaTxStr

options = {
    'network': {
        'name': 'sample_network',
        'alert_mode': AlertModesStr.SPECIFY,
        'set_alert': 'alert:0',
        'traffic_scale': 20000,
        'level_scale': 25,
        'dev_password': '12345',
        'beam1_file': 'example.gxt',
        'beam2_file': 'example.gxt',
        'beam3_file': 'example.gxt',
        'beam4_file': 'example.gxt',
    },
    'server': {
        'name': 'sample_server',
        'ip': '172.16.21.1',
        'enable': CheckboxStr.ON,
        'replication': CheckboxStr.ON,
        'location': 'sample_location',
    },
    'user_group': {
        'name': 'test_group',
        'active': CheckboxStr.ON,
    },
    'alert': {
        'name': 'sample_alert',
        'priority': AlertPriorityStr.MEDIUM,
        'popup': CheckboxStr.ON,
        'sound': CheckboxStr.ON,
        'file_name': 'alert.mp3',
        'repeat_sound': CheckboxStr.ON,
        'run_script': CheckboxStr.ON,
        'script_file': 'log_to_text_file.sh',
    },
    'access': {
        'group': 'group:1',
        'edit': CheckboxStr.ON,
        'use': CheckboxStr.ON,
    },
    'teleport': {
        'name': f'sample_tp',
        'sat_name': f'sample_sat',
        'sat_lon_deg': random.randint(-179, 179),
        'sat_lon_min': random.randint(0, 59),
        'lat_deg': random.randint(0, 89),
        'lat_min': random.randint(0, 59),
        'lat_south': random.choice([*LatitudeModesStr()]),
        'lon_deg': random.randint(0, 179),
        'lon_min': random.randint(0, 59),
        'lon_west': random.choice([*LongitudeModesStr()]),
        'time_zone': random.randint(-12, 12),
        'tx_lo': random.randint(0, 33000000),
        'tx_offset': random.randint(-10000, 10000),
        'tx_spi': random.choice([*CheckboxStr()]),
        'rx1_lo': random.randint(0, 33000000),
        'rx1_offset': random.randint(-10000, 10000),
        'rx1_spi': random.choice([*CheckboxStr()]),
        'rx2_lo': random.randint(0, 33000000),
        'rx2_offset': random.randint(-10000, 10000),
        'rx2_spi': random.choice([*CheckboxStr()]),
        'dvb_search': random.randint(0, 10000),
        'tdma_search': random.choice([*TdmaSearchModesStr()]),
    },
    'mf_hub': {
        'name': 'sample_mf_hub',
        'mode': ControllerModesStr.MF_HUB,
        'control': ControlModesStr.FULL,
        'up_timeout': random.randint(10, 250),
        'allow_local': random.choice([*CheckboxStr()]),
        'alert_mode': AlertModesStr.SPECIFY,
        'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        'binding': BindingModesStr.REDUNDANT_STATIC,
        'net_id': 155,
        'device_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'device_mask': '/24',
        'device_vlan': random.randint(0, 4095),
        'device_gateway': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # Redundant static specific
        'device_b_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'red_up_time': random.randint(20, 250),
        'red_fault_time': random.randint(10, 250),
        'tx_level_adj': random.randint(-10, 10),
        # Teleport specific
        'teleport': f'teleport:0',
        'tx_10m': random.choice([*CheckboxStr()]),
        'tx_dc_power': random.choice([*CheckboxStr()]),
        'rx_10m': random.choice([*CheckboxStr()]),
        'rx_dc_power': CheckboxStr.ON,
        'rx_voltage': random.choice([*RxVoltageStr()]),
        # Modulator specific
        'tx_frq': random.randint(950000, 33000000),
        'tx_sr': random.randint(300, 200000),
        'tx_pilots': CheckboxStr.ON,
        'tx_rolloff': RollofModesStr.R5,
        'acm_enable': CheckboxStr.ON,
        'tx_modcod': ModcodModes.SF_QPSK_1_2,
        'acm_mc2': ModcodModes.SF_QPSK_3_5,
        'acm_mc3': ModcodModes.SF_QPSK_2_3,
        'acm_mc4': ModcodModes.SF_QPSK_3_4,
        'acm_mc5': ModcodModes.SF_QPSK_4_5,
        'acm_mc6': ModcodModes.SF_QPSK_5_6,
        'acm_mc7': ModcodModes.SF_QPSK_8_9,
        'acm_mc8': ModcodModes.SF_8PSK_5_6,
        'acm_thr': 2,
        'mod_queue1': 3000,
        'mod_queue2': 2000,
        'mod_queue3': 1500,
        'mod_queue4': 900,
        'mod_queue5': 450,
        'mod_queue6': 150,
        'mod_queue7': 60,
        'mod_que_ctl': 100,
        'wbm_mode': WbmModesStr.WBM_AND_SC,
        'wbm_sym_rate1': random.randint(100, 200000),
        'wbm_sym_rate2': random.randint(100, 200000),
        'wbm_sym_rate3': random.randint(100, 200000),
        'wbm_sym_rate4': random.randint(100, 200000),
        'wbm_slicing': CheckboxStr.ON,
        'wbm_vlan': random.randint(0, 4095),
        'local_slice': random.randint(0, 255),
        'local_mtu': 1400,
        # Modulator transmission
        'tx_on': CheckboxStr.ON,
        'tx_level': random.randint(1, 46),
        'tlc_enable': CheckboxStr.ON,
        'tlc_max_lvl': random.randint(1, 46),
        'tlc_net_own': random.randint(0, 16),
        'tlc_avg_min': random.randint(0, 16),
        'tlc_cn_stn': 15,
        # Demodulator 1 section
        'rx1_input': DemodulatorInputModesStr.RX1,
        'rx1_frq': random.randint(950000, 33000000),
        'rx1_sr': random.randint(100, 200000),
        'hub_tts_mode': TtsModesStr.VALUE,
        'tts_value': random.randint(0, 150000),
        'own_cn_low': 20,
        'own_cn_high': 30,
        # Demodulator 2 section
        'rx2_input': DemodulatorInputModesStr.RX2,
        'rx2_frq': random.randint(950000, 33000000),
        'rx2_sr': random.randint(100, 200000),
        # TDMA protocol section
        'stn_number': random.randint(1, 2040),
        'frame_length': random.choice([i for i in range(16, 252, 4)]),
        'slot_length': random.randint(2, 15),
        'no_stn_check': CheckboxStr.ON,
        'roaming_enable': CheckboxStr.ON,
        'roaming_slots': random.randint(1, 32),
        # TDMA RF section
        'tdma_input': TdmaInputModesStr.RX1,  # to be compatible with all UHP models
        'tdma_sr': random.randint(100, 11000),
        'tdma_roll': RollofModesStr.R5,
        # MF channels section
        'mf1_en': random.choice([*CheckboxStr()]),
        'mf2_en': random.choice([*CheckboxStr()]),
        'mf3_en': random.choice([*CheckboxStr()]),
        'mf4_en': random.choice([*CheckboxStr()]),
        'mf5_en': random.choice([*CheckboxStr()]),
        'mf6_en': random.choice([*CheckboxStr()]),
        'mf7_en': random.choice([*CheckboxStr()]),
        'mf8_en': random.choice([*CheckboxStr()]),
        'mf9_en': random.choice([*CheckboxStr()]),
        'mf10_en': random.choice([*CheckboxStr()]),
        'mf11_en': random.choice([*CheckboxStr()]),
        'mf12_en': random.choice([*CheckboxStr()]),
        'mf13_en': random.choice([*CheckboxStr()]),
        'mf14_en': random.choice([*CheckboxStr()]),
        'mf15_en': random.choice([*CheckboxStr()]),
        'mf16_en': random.choice([*CheckboxStr()]),
        'mf1_rx': random.randint(950000, 33000000),
        'mf1_tx': random.randint(950000, 33000000),
        'mf2_rx': random.randint(950000, 33000000),
        'mf2_tx': random.randint(950000, 33000000),
        'mf3_rx': random.randint(950000, 33000000),
        'mf3_tx': random.randint(950000, 33000000),
        'mf4_rx': random.randint(950000, 33000000),
        'mf4_tx': random.randint(950000, 33000000),
        'mf5_rx': random.randint(950000, 33000000),
        'mf5_tx': random.randint(950000, 33000000),
        'mf6_rx': random.randint(950000, 33000000),
        'mf6_tx': random.randint(950000, 33000000),
        'mf7_rx': random.randint(950000, 33000000),
        'mf7_tx': random.randint(950000, 33000000),
        'mf8_rx': random.randint(950000, 33000000),
        'mf8_tx': random.randint(950000, 33000000),
        'mf9_rx': random.randint(950000, 33000000),
        'mf9_tx': random.randint(950000, 33000000),
        'mf10_rx': random.randint(950000, 33000000),
        'mf10_tx': random.randint(950000, 33000000),
        'mf11_rx': random.randint(950000, 33000000),
        'mf11_tx': random.randint(950000, 33000000),
        'mf12_rx': random.randint(950000, 33000000),
        'mf12_tx': random.randint(950000, 33000000),
        'mf13_rx': random.randint(950000, 33000000),
        'mf13_tx': random.randint(950000, 33000000),
        'mf14_rx': random.randint(950000, 33000000),
        'mf14_tx': random.randint(950000, 33000000),
        'mf15_rx': random.randint(950000, 33000000),
        'mf15_tx': random.randint(950000, 33000000),
        'mf16_rx': random.randint(950000, 33000000),
        'mf16_tx': random.randint(950000, 33000000),
        # TDMA channel coding section
        'tdma_mc': TdmaModcod._8PSK_2_3,
        'enh_tables': CheckboxStr.ON,
        'tlc_cn_hub': 20,
        'tdma_acm': TdmaAcmModesStr.LEGACY,
        'mesh_acm': CheckboxStr.ON,
        'mesh_mc': TdmaModcod._QPSK_2_3,
        'hub_rx_mesh': CheckboxStr.ON,
        'tdma_thr_acm': 2,
        # TDMA bandwidth control section
        'act_on_traf': CheckboxStr.ON,
        'mir_limit': CheckboxStr.ON,
        'opt_latency': CheckboxStr.ON,
        'rt_to_cir': CheckboxStr.ON,
        'bw_rq_scale': random.randint(10, 200),
        # BW RQ section
        'td_rq_act1': '128',
        'td_rq_act2': '129',
        'td_rq_act3': '130',
        'td_rq_act4': '131',
        'td_rq_idl1': '64',
        'td_rq_idl2': '65',
        'td_rq_idl3': '66',
        'td_rq_idl4': '67',
        'td_rq_dwn1': '32',
        'td_rq_dwn2': '33',
        'td_rq_dwn3': '34',
        'td_rq_dwn4': '35',
        'td_rq_tout1': '10',
        'td_rq_tout2': '11',
        'td_rq_tout3': '12',
        'td_rq_tout4': '13',
        # Load balancing section
        'bal_enable': CheckboxStr.ON,
        'bal_controller': 'bal_controller:0',
        'lowest_cn': random.randint(0, 20),
        'relative_cn': random.randint(-20, 20),
        'channel_bw': random.randint(100, 4000000),
        # 'load_type': LoadTypeModesStr.TDMA_CIR,
        'max_load': random.randint(100, 4000000),
        # Protocols section
        'ip_screening': IpScreeningModesStr.OFF,
        'dns_caching': CheckboxStr.ON,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': CheckboxStr.ON,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModesStr.IGMP,
        'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModesStr.BOTH,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': CheckboxStr.ON,
        'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModesStr.V3,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'snmp_auth': SnmpAuthStr.AUTH_PRIV,
        'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModesStr.ON,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_ip_start': '172.16.0.2',
        'dhcp_ip_end': '172.16.255.254',
        'dhcp_mask': '/16',
        'dhcp_gateway': '172.16.0.1',
        'dhcp_dns': '192.16.113.8',
        'dhcp_timeout': '65234',
        # 'dhcp_helper': '172.16.0.1',
        # 'dhcp_local_ip': '172.16.0.1',
        # NAT section
        'nat_enable': CheckboxStr.ON,
        'nat_ext_ip': '198.15.67.2',
        'nat_int_ip': '192.168.200.0',
        'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModesStr.ON,
        'rip_update': random.randint(10, 250),
        'rip_timeout': random.randint(30, 3600),
        'rip_cost': random.randint(1, 16),
        'rip_auth': CheckboxStr.ON,
        'rip_pass': 'qwerty999',
        # 'rip_omit_down': CheckboxStr.ON,
        # 'rip_omit_sm': CheckboxStr.ON,
        # TCPA section
        'tcpa_enable': CheckboxStr.ON,
        'tcpa_version': TcpaVersionStr.V3_5,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': CheckboxStr.ON,
        'sm_interval': '13',
        'sm_losts': '3',
        'poll_enable1': CheckboxStr.ON,
        'poll_ip1': '127.0.0.1',
        'poll_vlan1': '3097',
        'chk_delay1': CheckboxStr.ON,
        'max_delay1': '1280',
        'poll_enable2': CheckboxStr.ON,
        'poll_ip2': '10.0.4.19',
        'poll_vlan2': '4001',
        'chk_delay2': CheckboxStr.ON,
        'max_delay2': '1320',
        'lan_rx_check': LanCheckModesStr.HIGHER,
        'rx_check_rate': '32128',
        'lan_tx_check': LanCheckModesStr.LOWER,
        'tx_check_rate': '9862',
        'bkp_enable': CheckboxStr.ON,
        'bkp_ip': '10.0.2.1',
        'auto_reboot': CheckboxStr.ON,
        'reboot_delay': '182',
    },
    'outroute': {
        'name': 'sample_outroute',
        'mode': ControllerModesStr.OUTROUTE,
        'control': ControlModesStr.FULL,
        'up_timeout': random.randint(10, 250),
        'allow_local': CheckboxStr.ON,
        'alert_mode': AlertModesStr.SPECIFY,
        'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        'binding': BindingModesStr.REDUNDANT_STATIC,
        'net_id': 155,
        'uhp_model': 'UHP200X',
        'device_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'device_mask': '/24',
        'device_vlan': random.randint(0, 4095),
        'device_gateway': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # Redundant static specific
        'device_b_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'red_up_time': random.randint(20, 250),
        'red_fault_time': random.randint(10, 250),
        'tx_level_adj': random.randint(-10, 10),
        'teleport': f'teleport:0',
        'tx_10m': random.choice([*CheckboxStr()]),
        'tx_dc_power': random.choice([*CheckboxStr()]),
        'rx_10m': random.choice([*CheckboxStr()]),
        'rx_dc_power': CheckboxStr.ON,
        'rx_voltage': random.choice([*RxVoltageStr()]),
        # Modulator specific
        'tx_frq': random.randint(950000, 33000000),
        'tx_sr': random.randint(300, 200000),
        'tx_pilots': random.choice([*CheckboxStr()]),
        'tx_rolloff': RollofModesStr.R5,
        'acm_enable': CheckboxStr.ON,
        'tx_modcod': ModcodModes.SF_QPSK_1_2,
        'acm_mc2': ModcodModes.SF_QPSK_3_5,
        'acm_mc3': ModcodModes.SF_QPSK_2_3,
        'acm_mc4': ModcodModes.SF_QPSK_3_4,
        'acm_mc5': ModcodModes.SF_QPSK_4_5,
        'acm_mc6': ModcodModes.SF_QPSK_5_6,
        'acm_mc7': ModcodModes.SF_QPSK_8_9,
        'acm_mc8': ModcodModes.SF_8PSK_5_6,
        'acm_thr': 2,
        'mod_queue1': 3000,
        'mod_queue2': 2000,
        'mod_queue3': 1500,
        'mod_queue4': 900,
        'mod_queue5': 450,
        'mod_queue6': 150,
        'mod_queue7': 60,
        'mod_que_ctl': 100,
        'wbm_mode': WbmModesStr.WBM_AND_SC,
        'wbm_sym_rate1': random.randint(100, 200000),
        'wbm_sym_rate2': random.randint(100, 200000),
        'wbm_sym_rate3': random.randint(100, 200000),
        'wbm_sym_rate4': random.randint(100, 200000),
        'wbm_slicing': CheckboxStr.ON,
        'wbm_vlan': random.randint(0, 4095),
        'local_slice': random.randint(0, 255),
        'local_mtu': 1400,
        # Modulator transmission
        'tx_on': CheckboxStr.ON,
        'tx_level': random.randint(1, 46),
        'tlc_enable': CheckboxStr.ON,
        'tlc_max_lvl': random.randint(1, 46),
        'tlc_net_own': random.randint(0, 16),
        'tlc_avg_min': random.randint(0, 16),
        'tlc_cn_stn': 15,
        # Demodulator 1 section
        'rx1_input': DemodulatorInputModesStr.RX1,
        'rx1_frq': random.randint(950000, 33000000),
        'rx1_sr': random.randint(100, 200000),
        'hub_tts_mode': TtsModesStr.VALUE,
        'tts_value': random.randint(0, 150000),
        'own_cn_low': 20,
        'own_cn_high': 30,
        # Demodulator 2 section
        'rx2_input': DemodulatorInputModesStr.RX2,
        'rx2_frq': random.randint(950000, 33000000),
        'rx2_sr': random.randint(100, 200000),
        # Protocols section
        'ip_screening': IpScreeningModesStr.OFF,
        'dns_caching': CheckboxStr.ON,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': CheckboxStr.ON,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModesStr.IGMP,
        'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModesStr.BOTH,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': CheckboxStr.ON,
        'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModesStr.V3,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'snmp_auth': SnmpAuthStr.AUTH_PRIV,
        'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModesStr.ON,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_ip_start': '172.16.0.2',
        'dhcp_ip_end': '172.16.255.254',
        'dhcp_mask': '/16',
        'dhcp_gateway': '172.16.0.1',
        'dhcp_dns': '192.16.113.8',
        'dhcp_timeout': '65234',
        # 'dhcp_helper': '172.16.0.1',
        # 'dhcp_local_ip': '172.16.0.1',
        # NAT section
        'nat_enable': CheckboxStr.ON,
        'nat_ext_ip': '198.15.67.2',
        'nat_int_ip': '192.168.200.0',
        'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModesStr.ON,
        'rip_update': random.randint(10, 250),
        'rip_timeout': random.randint(30, 3600),
        'rip_cost': random.randint(1, 16),
        'rip_auth': CheckboxStr.ON,
        'rip_pass': 'qwerty999',
        # 'rip_omit_down': 1,
        # 'rip_omit_sm': 1,
        # TCPA section
        'tcpa_enable': CheckboxStr.ON,
        'tcpa_version': TcpaVersionStr.V3_5,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': CheckboxStr.ON,
        'sm_interval': '13',
        'sm_losts': '3',
        'poll_enable1': CheckboxStr.ON,
        'poll_ip1': '127.0.0.1',
        'poll_vlan1': '3097',
        'chk_delay1': CheckboxStr.ON,
        'max_delay1': '1280',
        'poll_enable2': CheckboxStr.ON,
        'poll_ip2': '10.0.4.19',
        'poll_vlan2': '4001',
        'chk_delay2': CheckboxStr.ON,
        'max_delay2': '1320',
        'lan_rx_check': LanCheckModesStr.HIGHER,
        'rx_check_rate': '32128',
        'lan_tx_check': LanCheckModesStr.LOWER,
        'tx_check_rate': '9862',
        'bkp_enable': CheckboxStr.ON,
        'bkp_ip': '10.0.2.1',
        'auto_reboot': CheckboxStr.ON,
        'reboot_delay': '182',
    },
    'dama_hub': {
        'name': 'sample_dama_hub',
        'mode': ControllerModesStr.DAMA_HUB,
        'control': ControlModesStr.FULL,
        'up_timeout': random.randint(10, 250),
        'allow_local': random.choice([*CheckboxStr()]),
        'alert_mode': AlertModesStr.SPECIFY,
        'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        # Smart binding
        'binding': BindingModesStr.SMART,
        'sr_controller': 'sr_controller:0',
        'sr_priority': random.randint(0, 100),
        'dyn_license': CheckboxStr.ON,
        'license_group': random.randint(1, 8),
        'net_id': 155,
        'uhp_model': ModelTypesStr.UHP200X,
        # Teleport specific None as Smart is set
        # Modulator specific
        'tx_frq': random.randint(950000, 33000000),
        'tx_sr': random.randint(300, 200000),
        'tx_pilots': CheckboxStr.ON,
        'tx_rolloff': RollofModesStr.R5,
        'acm_enable': CheckboxStr.ON,
        'tx_modcod': ModcodModes.SF_QPSK_1_2,
        'acm_mc2': ModcodModes.SF_QPSK_3_5,
        'acm_mc3': ModcodModes.SF_QPSK_2_3,
        'acm_mc4': ModcodModes.SF_QPSK_3_4,
        'acm_mc5': ModcodModes.SF_QPSK_4_5,
        'acm_mc6': ModcodModes.SF_QPSK_5_6,
        'acm_mc7': ModcodModes.SF_QPSK_8_9,
        'acm_mc8': ModcodModes.SF_8PSK_5_6,
        'acm_thr': 2,
        'mod_queue1': 3000,
        'mod_queue2': 2000,
        'mod_queue3': 1500,
        'mod_queue4': 900,
        'mod_queue5': 450,
        'mod_queue6': 150,
        'mod_queue7': 60,
        'mod_que_ctl': 100,
        'wbm_mode': WbmModesStr.WBM_AND_SC,
        'wbm_sym_rate1': random.randint(100, 200000),
        'wbm_sym_rate2': random.randint(100, 200000),
        'wbm_sym_rate3': random.randint(100, 200000),
        'wbm_sym_rate4': random.randint(100, 200000),
        'wbm_slicing': CheckboxStr.ON,
        'wbm_vlan': random.randint(0, 4095),
        'local_slice': random.randint(0, 255),
        'local_mtu': 1400,
        # Modulator transmission
        'tx_on': CheckboxStr.ON,
        'tx_level': random.randint(1, 46),
        'tlc_enable': CheckboxStr.ON,
        'tlc_max_lvl': random.randint(1, 46),
        'tlc_net_own': random.randint(0, 16),
        'tlc_avg_min': random.randint(0, 16),
        'tlc_cn_stn': 15,
        # DAMA Return A
        'a_dama_tx_frq': random.randint(950000, 33000000),
        'a_dama_rx_frq': random.randint(950000, 33000000),
        'a_dama_sr': random.randint(100, 65000),
        'a_dama_modcod': ModcodModes.SF_QPSK_1_2,
        'a_dama_pilots': CheckboxStr.ON,
        'a_dama_rolloff': RollofModesStr.R5,
        'a_dama_tx': DamaTxStr.ON,
        'a_dama_level': random.randint(1, 46),
        'a_dama_cn_hub': random.randint(0, 25),
        # DAMA Return B
        'b_dama_tx_frq': random.randint(950000, 33000000),
        'b_dama_rx_frq': random.randint(950000, 33000000),
        'b_dama_sr': random.randint(100, 65000),
        'b_dama_modcod': ModcodModes.SF_QPSK_2_3,
        'b_dama_pilots': CheckboxStr.OFF,
        'b_dama_rolloff': RollofModesStr.R20,
        'b_dama_tx': DamaTxStr.PURE,
        'b_dama_level': random.randint(1, 46),
        'b_dama_cn_hub': random.randint(0, 25),

        # Protocols section
        'ip_screening': IpScreeningModesStr.OFF,
        'dns_caching': CheckboxStr.ON,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': CheckboxStr.ON,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModesStr.IGMP,
        'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModesStr.BOTH,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': CheckboxStr.ON,
        'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModesStr.V3,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'snmp_auth': SnmpAuthStr.AUTH_PRIV,
        'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModesStr.RELAY,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_helper': '172.16.0.1',
        'dhcp_local_ip': '172.16.0.1',
        # NAT section
        'nat_enable': CheckboxStr.ON,
        'nat_ext_ip': '198.15.67.2',
        'nat_int_ip': '192.168.200.0',
        'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModesStr.TX_ONLY,
        'rip_next_hop': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'rip_cost': random.randint(1, 16),
        'rip_omit_down': CheckboxStr.ON,
        'rip_omit_sm': CheckboxStr.ON,
        # TCPA section
        'tcpa_enable': CheckboxStr.ON,
        'tcpa_version': TcpaVersionStr.V3_5,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': CheckboxStr.ON,
        'sm_interval': '13',
        'sm_losts': '3',
        'poll_enable1': CheckboxStr.ON,
        'poll_ip1': '127.0.0.1',
        'poll_vlan1': '3097',
        'chk_delay1': CheckboxStr.ON,
        'max_delay1': '1280',
        'poll_enable2': CheckboxStr.ON,
        'poll_ip2': '10.0.4.19',
        'poll_vlan2': '4001',
        'chk_delay2': CheckboxStr.ON,
        'max_delay2': '1320',
        'lan_rx_check': LanCheckModesStr.HIGHER,
        'rx_check_rate': '32128',
        'lan_tx_check': LanCheckModesStr.LOWER,
        'tx_check_rate': '9862',
        'bkp_enable': CheckboxStr.ON,
        'bkp_ip': '10.0.2.1',
        'auto_reboot': CheckboxStr.ON,
        'reboot_delay': '182',
    },
    'hubless_master': {
        'name': 'sample_hubless_master',
        'mode': ControllerModesStr.HUBLESS_MASTER,
        'control': ControlModesStr.FULL,
        'up_timeout': random.randint(10, 250),
        'allow_local': random.choice([*CheckboxStr()]),
        'alert_mode': AlertModesStr.INHERIT,
        # 'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        'binding': BindingModesStr.STATIC,
        # 'net_id': 155,
        'uhp_model': ModelTypesStr.UHP200X,
        'device_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'device_mask': '/24',
        'device_vlan': random.randint(0, 4095),
        'device_gateway': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # Teleport specific
        'teleport': f'teleport:0',
        'tx_10m': random.choice([*CheckboxStr()]),
        'tx_dc_power': random.choice([*CheckboxStr()]),
        'rx_10m': random.choice([*CheckboxStr()]),
        'rx_dc_power': CheckboxStr.OFF,
        # 'rx_voltage': random.randint(0, 1),
        # Modulator specific
        'mod_queue1': 3000,
        'mod_queue2': 2000,
        'mod_queue3': 1500,
        'mod_queue4': 900,
        'mod_queue5': 450,
        'mod_queue6': 150,
        'mod_queue7': 60,
        'mod_que_ctl': 100,
        # Modulator transmission
        'tx_on': CheckboxStr.ON,
        'tx_level': random.randint(1, 46),
        'tlc_enable': CheckboxStr.ON,
        'tlc_max_lvl': random.randint(1, 46),
        'tlc_net_own': random.randint(0, 16),
        'tlc_avg_min': random.randint(0, 16),
        'tlc_cn_stn': 15,
        # Demodulator 1 section
        'rx1_input': DemodulatorInputModesStr.RX1,
        'rx1_frq': random.randint(950000, 33000000),
        'rx1_sr': random.randint(100, 200000),
        'own_cn_low': 20,
        'own_cn_high': 30,
        # Demodulator 2 section
        'rx2_input': DemodulatorInputModesStr.RX2,
        'rx2_frq': random.randint(950000, 33000000),
        'rx2_sr': random.randint(100, 200000),
        # TDMA protocol section
        'stn_number': random.randint(1, 2040),
        'frame_length': random.choice([i for i in range(16, 252, 4)]),
        'slot_length': random.randint(2, 15),
        # TDMA RF section
        'tdma_input': TdmaInputModesStr.RX1,
        'tdma_sr': random.randint(100, 11000),
        'tdma_roll': RollofModesStr.R5,
        # MF channels section
        'mf1_en': random.choice([*CheckboxStr()]),
        'mf2_en': random.choice([*CheckboxStr()]),
        'mf3_en': random.choice([*CheckboxStr()]),
        'mf4_en': random.choice([*CheckboxStr()]),
        'mf5_en': random.choice([*CheckboxStr()]),
        'mf6_en': random.choice([*CheckboxStr()]),
        'mf7_en': random.choice([*CheckboxStr()]),
        'mf8_en': random.choice([*CheckboxStr()]),
        'mf1_rx': random.randint(950000, 33000000),
        'mf1_tx': random.randint(950000, 33000000),
        'mf2_rx': random.randint(950000, 33000000),
        'mf2_tx': random.randint(950000, 33000000),
        'mf3_rx': random.randint(950000, 33000000),
        'mf3_tx': random.randint(950000, 33000000),
        'mf4_rx': random.randint(950000, 33000000),
        'mf4_tx': random.randint(950000, 33000000),
        'mf5_rx': random.randint(950000, 33000000),
        'mf5_tx': random.randint(950000, 33000000),
        'mf6_rx': random.randint(950000, 33000000),
        'mf6_tx': random.randint(950000, 33000000),
        'mf7_rx': random.randint(950000, 33000000),
        'mf7_tx': random.randint(950000, 33000000),
        'mf8_rx': random.randint(950000, 33000000),
        'mf8_tx': random.randint(950000, 33000000),
        # TDMA channel coding section
        'tdma_mc': TdmaModcod._8PSK_2_3,
        'enh_tables': CheckboxStr.ON,
        'tlc_cn_hub': 20,
        # 'tdma_acm': TdmaAcmModesStr.LEGACY,
        # 'tdma_leg_thr': 3,
        # 'tdma_thr_acm': 2,
        # TDMA bandwidth control section
        'act_on_traf': CheckboxStr.ON,
        'mir_limit': CheckboxStr.ON,
        'opt_latency': CheckboxStr.ON,
        'rt_to_cir': CheckboxStr.ON,
        'bw_rq_scale': random.randint(10, 200),
        # BW RQ section
        'td_rq_act1': '128',
        'td_rq_act2': '129',
        'td_rq_act3': '130',
        'td_rq_act4': '131',
        'td_rq_idl1': '64',
        'td_rq_idl2': '65',
        'td_rq_idl3': '66',
        'td_rq_idl4': '67',
        'td_rq_dwn1': '32',
        'td_rq_dwn2': '33',
        'td_rq_dwn3': '34',
        'td_rq_dwn4': '35',
        'td_rq_tout1': '10',
        'td_rq_tout2': '11',
        'td_rq_tout3': '12',
        'td_rq_tout4': '13',
        # Master section
        'hub_shaper': 'shaper:0',
        'rq_profile': random.randint(1, 4),
        'rt_codec': random.randint(1, 65000),
        'rt_threshold': random.randint(1, 200),
        'rt_timeout': random.randint(1, 200),
        # Protocols section
        'ip_screening': IpScreeningModesStr.OFF,
        'dns_caching': CheckboxStr.ON,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': CheckboxStr.ON,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModesStr.IGMP,
        'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModesStr.BOTH,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': CheckboxStr.ON,
        'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModesStr.V3,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'snmp_auth': SnmpAuthStr.AUTH_PRIV,
        'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModesStr.ON,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_ip_start': '172.16.0.2',
        'dhcp_ip_end': '172.16.255.254',
        'dhcp_mask': '/16',
        'dhcp_gateway': '172.16.0.1',
        'dhcp_dns': '192.16.113.8',
        'dhcp_timeout': '65234',
        # NAT section
        'nat_enable': CheckboxStr.ON,
        'nat_ext_ip': '198.15.67.2',
        'nat_int_ip': '192.168.200.0',
        'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModesStr.ON,
        'rip_update': random.randint(10, 250),
        'rip_timeout': random.randint(30, 3600),
        'rip_cost': random.randint(1, 16),
        'rip_auth': CheckboxStr.ON,
        'rip_pass': 'qwerty999',
        # TCPA section
        'tcpa_enable': CheckboxStr.ON,
        'tcpa_version': TcpaVersionStr.V3_5,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': CheckboxStr.ON,
        'sm_interval': '13',
        'sm_losts': '3',
        'poll_enable1': CheckboxStr.ON,
        'poll_ip1': '127.0.0.1',
        'poll_vlan1': '3097',
        'chk_delay1': CheckboxStr.ON,
        'max_delay1': '1280',
        'poll_enable2': CheckboxStr.ON,
        'poll_ip2': '10.0.4.19',
        'poll_vlan2': '4001',
        'chk_delay2': CheckboxStr.ON,
        'max_delay2': '1320',
        'lan_rx_check': LanCheckModesStr.HIGHER,
        'rx_check_rate': '32128',
        'lan_tx_check': LanCheckModesStr.LOWER,
        'tx_check_rate': '9862',
        'bkp_enable': CheckboxStr.ON,
        'bkp_ip': '10.0.2.1',
        'auto_reboot': CheckboxStr.ON,
        'reboot_delay': '182',
    },
    'inroute': {
        'name': 'sample_inroute',
        'mode': ControllerModesStr.INROUTE,
        'control': ControlModesStr.FULL,
        'tx_controller': 'controller:0',
        'up_timeout': random.randint(10, 250),
        'allow_local': CheckboxStr.ON,
        'alert_mode': AlertModesStr.SPECIFY,
        'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        'binding': BindingModesStr.REDUNDANT_STATIC,
        'uhp_model': ModelTypesStr.UHP200X,
        'device_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'device_mask': '/24',
        'device_vlan': random.randint(0, 4095),
        'device_gateway': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # Redundant static specific
        'device_b_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'red_up_time': random.randint(20, 250),
        'red_fault_time': random.randint(10, 250),
        'tx_level_adj': random.randint(-10, 10),
        # Teleport specific
        'teleport': f'teleport:0',
        'tx_10m': CheckboxStr.ON,
        'tx_dc_power': CheckboxStr.OFF,
        'rx_10m': CheckboxStr.ON,
        'rx_dc_power': CheckboxStr.OFF,
        # Demodulator 1 section
        # 'rx1_input': DemodulatorInputModesStr.RX1,
        # 'own_cn_low': 23,
        # 'own_cn_high': 24,
        # TDMA protocol section
        'stn_number': random.randint(1, 2040),
        'frame_length': random.choice([i for i in range(16, 252, 4)]),
        'slot_length': random.randint(2, 15),
        'inroute': 15,
        'no_stn_check': CheckboxStr.ON,
        'roaming_enable': CheckboxStr.ON,
        'roaming_slots': random.randint(1, 32),
        # TDMA RF section
        'tdma_input': TdmaInputModesStr.RX1,
        'tdma_sr': random.randint(100, 11000),
        'tdma_roll': RollofModesStr.R5,
        # MF channels section
        'mf1_en': random.choice([*CheckboxStr()]),
        'mf2_en': random.choice([*CheckboxStr()]),
        'mf3_en': random.choice([*CheckboxStr()]),
        'mf4_en': random.choice([*CheckboxStr()]),
        'mf5_en': random.choice([*CheckboxStr()]),
        'mf6_en': random.choice([*CheckboxStr()]),
        'mf7_en': random.choice([*CheckboxStr()]),
        'mf8_en': random.choice([*CheckboxStr()]),
        'mf9_en': random.choice([*CheckboxStr()]),
        'mf10_en': random.choice([*CheckboxStr()]),
        'mf11_en': random.choice([*CheckboxStr()]),
        'mf12_en': random.choice([*CheckboxStr()]),
        'mf13_en': random.choice([*CheckboxStr()]),
        'mf14_en': random.choice([*CheckboxStr()]),
        'mf15_en': random.choice([*CheckboxStr()]),
        'mf16_en': random.choice([*CheckboxStr()]),
        'mf1_rx': random.randint(950000, 33000000),
        'mf1_tx': random.randint(950000, 33000000),
        'mf2_rx': random.randint(950000, 33000000),
        'mf2_tx': random.randint(950000, 33000000),
        'mf3_rx': random.randint(950000, 33000000),
        'mf3_tx': random.randint(950000, 33000000),
        'mf4_rx': random.randint(950000, 33000000),
        'mf4_tx': random.randint(950000, 33000000),
        'mf5_rx': random.randint(950000, 33000000),
        'mf5_tx': random.randint(950000, 33000000),
        'mf6_rx': random.randint(950000, 33000000),
        'mf6_tx': random.randint(950000, 33000000),
        'mf7_rx': random.randint(950000, 33000000),
        'mf7_tx': random.randint(950000, 33000000),
        'mf8_rx': random.randint(950000, 33000000),
        'mf8_tx': random.randint(950000, 33000000),
        'mf9_rx': random.randint(950000, 33000000),
        'mf9_tx': random.randint(950000, 33000000),
        'mf10_rx': random.randint(950000, 33000000),
        'mf10_tx': random.randint(950000, 33000000),
        'mf11_rx': random.randint(950000, 33000000),
        'mf11_tx': random.randint(950000, 33000000),
        'mf12_rx': random.randint(950000, 33000000),
        'mf12_tx': random.randint(950000, 33000000),
        'mf13_rx': random.randint(950000, 33000000),
        'mf13_tx': random.randint(950000, 33000000),
        'mf14_rx': random.randint(950000, 33000000),
        'mf14_tx': random.randint(950000, 33000000),
        'mf15_rx': random.randint(950000, 33000000),
        'mf15_tx': random.randint(950000, 33000000),
        'mf16_rx': random.randint(950000, 33000000),
        'mf16_tx': random.randint(950000, 33000000),
        # TDMA channel coding section
        'tdma_mc': TdmaModcod._8PSK_2_3,
        'enh_tables': CheckboxStr.ON,
        'tlc_cn_hub': 20,
        'tdma_acm': TdmaAcmModesStr.LEGACY,
        'tdma_thr_acm': 2,
        # TDMA bandwidth control section
        'act_on_traf': CheckboxStr.ON,
        'mir_limit': CheckboxStr.ON,
        'opt_latency': CheckboxStr.ON,
        'rt_to_cir': CheckboxStr.ON,
        'bw_rq_scale': random.randint(10, 200),
        # BW RQ section
        'td_rq_act1': '128',
        'td_rq_act2': '129',
        'td_rq_act3': '130',
        'td_rq_act4': '131',
        'td_rq_idl1': '64',
        'td_rq_idl2': '65',
        'td_rq_idl3': '66',
        'td_rq_idl4': '67',
        'td_rq_dwn1': '32',
        'td_rq_dwn2': '33',
        'td_rq_dwn3': '34',
        'td_rq_dwn4': '35',
        'td_rq_tout1': '10',
        'td_rq_tout2': '11',
        'td_rq_tout3': '12',
        'td_rq_tout4': '13',
        # Load balancing section
        'bal_enable': CheckboxStr.ON,
        'bal_controller': 'bal_controller:0',
        'lowest_cn': random.randint(0, 20),
        'relative_cn': random.randint(-20, 20),
        'channel_bw': random.randint(100, 4000000),
        # 'load_type': LoadTypeModesStr.TDMA_CIR,
        'max_load': random.randint(100, 4000000),
        # Protocols section
        'ip_screening': IpScreeningModesStr.OFF,
        'dns_caching': CheckboxStr.ON,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': CheckboxStr.ON,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModesStr.IGMP,
        'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModesStr.BOTH,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': CheckboxStr.ON,
        'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModesStr.V3,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'snmp_auth': SnmpAuthStr.AUTH_PRIV,
        'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModesStr.ON,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_ip_start': '172.16.0.2',
        'dhcp_ip_end': '172.16.255.254',
        'dhcp_mask': '/16',
        'dhcp_gateway': '172.16.0.1',
        'dhcp_dns': '192.16.113.8',
        'dhcp_timeout': '65234',
        # NAT section
        'nat_enable': CheckboxStr.ON,
        'nat_ext_ip': '198.15.67.2',
        'nat_int_ip': '192.168.200.0',
        'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModesStr.ON,
        'rip_update': random.randint(10, 250),
        'rip_timeout': random.randint(30, 3600),
        'rip_cost': random.randint(1, 16),
        'rip_auth': CheckboxStr.ON,
        'rip_pass': 'qwerty999',
        # TCPA section
        'tcpa_enable': CheckboxStr.ON,
        'tcpa_version': TcpaVersionStr.V3_5,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': CheckboxStr.ON,
        'sm_interval': '13',
        'sm_losts': '3',
        'poll_enable1': CheckboxStr.ON,
        'poll_ip1': '127.0.0.1',
        'poll_vlan1': '3097',
        'chk_delay1': CheckboxStr.ON,
        'max_delay1': '1280',
        'poll_enable2': CheckboxStr.ON,
        'poll_ip2': '10.0.4.19',
        'poll_vlan2': '4001',
        'chk_delay2': CheckboxStr.ON,
        'max_delay2': '1320',
        'lan_rx_check': LanCheckModesStr.HIGHER,
        'rx_check_rate': '32128',
        'lan_tx_check': LanCheckModesStr.LOWER,
        'tx_check_rate': '9862',
        'bkp_enable': CheckboxStr.ON,
        'bkp_ip': '10.0.2.1',
        'auto_reboot': CheckboxStr.ON,
        'reboot_delay': '182',
    },
    'dama_inroute': {
        'name': 'sample_dama_inroute',
        'mode': ControllerModesStr.DAMA_INROUTE,
        'control': ControlModesStr.FULL,
        'tx_controller': 'controller:0',
        'up_timeout': random.randint(10, 250),
        'allow_local': CheckboxStr.ON,
        'alert_mode': AlertModesStr.SPECIFY,
        'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        'binding': BindingModesStr.REDUNDANT_STATIC,
        'uhp_model': ModelTypesStr.UHP200X,
        'device_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'device_mask': '/24',
        'device_vlan': random.randint(0, 4095),
        'device_gateway': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # Redundant static specific
        'device_b_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'red_up_time': random.randint(20, 250),
        'red_fault_time': random.randint(10, 250),
        'tx_level_adj': random.randint(-10, 10),
        # Teleport specific
        'teleport': f'teleport:0',
        'tx_10m': random.choice([*CheckboxStr()]),
        'tx_dc_power': random.choice([*CheckboxStr()]),
        'rx_10m': random.choice([*CheckboxStr()]),
        'rx_dc_power': CheckboxStr.OFF,
        # DAMA Return A
        'a_dama_tx_frq': random.randint(950000, 33000000),
        'a_dama_rx_frq': random.randint(950000, 33000000),
        'a_dama_sr': random.randint(100, 65000),
        'a_dama_modcod': ModcodModes.SF_QPSK_1_2,
        'a_dama_pilots': CheckboxStr.ON,
        'a_dama_rolloff': RollofModesStr.R5,
        'a_dama_tx': DamaTxStr.ON,
        'a_dama_level': random.randint(1, 46),
        'a_dama_cn_hub': random.randint(0, 25),
        # DAMA Return B
        'b_dama_tx_frq': random.randint(950000, 33000000),
        'b_dama_rx_frq': random.randint(950000, 33000000),
        'b_dama_sr': random.randint(100, 65000),
        'b_dama_modcod': ModcodModes.SF_QPSK_2_3,
        'b_dama_pilots': CheckboxStr.OFF,
        'b_dama_rolloff': RollofModesStr.R20,
        'b_dama_tx': DamaTxStr.PURE,
        'b_dama_level': random.randint(1, 46),
        'b_dama_cn_hub': random.randint(0, 25),
        # Protocols section
        'ip_screening': IpScreeningModesStr.OFF,
        'dns_caching': CheckboxStr.ON,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': CheckboxStr.ON,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModesStr.IGMP,
        'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModesStr.BOTH,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': CheckboxStr.ON,
        'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModesStr.V3,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'snmp_auth': SnmpAuthStr.AUTH_PRIV,
        'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModesStr.ON,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_ip_start': '172.16.0.2',
        'dhcp_ip_end': '172.16.255.254',
        'dhcp_mask': '/16',
        'dhcp_gateway': '172.16.0.1',
        'dhcp_dns': '192.16.113.8',
        'dhcp_timeout': '65234',
        # NAT section
        'nat_enable': CheckboxStr.ON,
        'nat_ext_ip': '198.15.67.2',
        'nat_int_ip': '192.168.200.0',
        'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModesStr.ON,
        'rip_update': random.randint(10, 250),
        'rip_timeout': random.randint(30, 3600),
        'rip_cost': random.randint(1, 16),
        'rip_auth': CheckboxStr.ON,
        'rip_pass': 'qwerty999',
        # TCPA section
        'tcpa_enable': CheckboxStr.ON,
        'tcpa_version': TcpaVersionStr.V3_5,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': CheckboxStr.ON,
        'sm_interval': '13',
        'sm_losts': '3',
        'poll_enable1': CheckboxStr.ON,
        'poll_ip1': '127.0.0.1',
        'poll_vlan1': '3097',
        'chk_delay1': CheckboxStr.ON,
        'max_delay1': '1280',
        'poll_enable2': CheckboxStr.ON,
        'poll_ip2': '10.0.4.19',
        'poll_vlan2': '4001',
        'chk_delay2': CheckboxStr.ON,
        'max_delay2': '1320',
        'lan_rx_check': LanCheckModesStr.HIGHER,
        'rx_check_rate': '32128',
        'lan_tx_check': LanCheckModesStr.LOWER,
        'tx_check_rate': '9862',
        'bkp_enable': CheckboxStr.ON,
        'bkp_ip': '10.0.2.1',
        'auto_reboot': CheckboxStr.ON,
        'reboot_delay': '182',
    },
    'mf_inroute': {
        'name': 'sample_mf_inroute',
        'mode': ControllerModes.MF_INROUTE,
        'control': ControlModes.FULL,
        'up_timeout': random.randint(10, 250),
        'allow_local': 1,
        'alert_mode': AlertModes.SPECIFY,
        'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        'binding': BindingModes.REDUNDANT_STATIC,
        'net_id': 155,
        'device_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'device_mask': '/24',
        'device_vlan': random.randint(0, 4095),
        'device_gateway': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # Redundant static specific
        'device_b_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'red_up_time': random.randint(20, 250),
        'red_fault_time': random.randint(10, 250),
        'tx_level_adj': random.randint(-10, 10),
        # Smart specific
        'sr_controller': 'sr_controller:0',
        'sr_priority': random.randint(0, 100),
        'dyn_license': 1,
        'license_group': random.randint(1, 8),
        # Teleport specific
        'teleport': f'teleport:0',
        'tx_10m': random.randint(0, 1),
        'tx_dc_power': random.randint(0, 1),
        'rx_10m': random.randint(0, 1),
        'rx_dc_power': 1,
        'rx_voltage': random.randint(0, 1),
        # Demodulator 1 section
        'rx1_input': DemodulatorInputModes.RX1,
        # Protocols section
        'ip_screening': IpScreeningModes.OFF,
        'dns_caching': 1,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': 1,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModes.IGMP,
        'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModes.BOTH,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': 1,
        'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModes.V3,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'snmp_auth': SnmpAuth.AUTH_PRIV,
        'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModes.ON,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_ip_start': '172.16.0.2',
        'dhcp_ip_end': '172.16.255.254',
        'dhcp_mask': '/16',
        'dhcp_gateway': '172.16.0.1',
        'dhcp_dns': '192.16.113.8',
        'dhcp_timeout': '65234',
        'dhcp_helper': '172.16.0.1',
        'dhcp_local_ip': '172.16.0.1',
        # NAT section
        'nat_enable': '1',
        'nat_ext_ip': '198.15.67.2',
        'nat_int_ip': '192.168.200.0',
        'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModes.ON,
        'rip_update': random.randint(10, 250),
        'rip_timeout': random.randint(30, 3600),
        'rip_cost': random.randint(1, 16),
        'rip_auth': 1,
        'rip_pass': 'qwerty999',
        'rip_omit_down': 1,
        'rip_omit_sm': 1,
        # TCPA section
        'tcpa_enable': '1',
        'tcpa_version': TcpaVersion.V3_5,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': 1,
        'sm_interval': '13',
        'sm_losts': '3',
        'poll_enable1': '1',
        'poll_ip1': '127.0.0.1',
        'poll_vlan1': '3097',
        'chk_delay1': '1',
        'max_delay1': '1280',
        'poll_enable2': '1',
        'poll_ip2': '10.0.4.19',
        'poll_vlan2': '4001',
        'chk_delay2': '1',
        'max_delay2': '1320',
        'lan_rx_check': LanCheckModes.HIGHER,
        'rx_check_rate': '32128',
        'lan_tx_check': LanCheckModes.LOWER,
        'tx_check_rate': '9862',
        'bkp_enable': '1',
        'bkp_ip': '10.0.2.1',
        'auto_reboot': '1',
        'reboot_delay': '182',
    },
    'gateway': {
        'name': 'sample_gateway',
        'mode': ControllerModesStr.GATEWAY,
        'control': ControlModesStr.STATS_ONLY,
        'tx_controller': 'controller:0',
        'up_timeout': random.randint(10, 250),
        'allow_local': CheckboxStr.OFF,
        'alert_mode': AlertModes.OFF,
        # 'set_alert': 'alert:0',
        'traffic_scale': random.randint(0, 50000),
        'level_scale': random.randint(0, 35),
        'binding': BindingModes.STATIC,
        # 'net_id': 155,
        'device_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'device_mask': '/24',
        'device_vlan': random.randint(0, 4095),
        'device_gateway': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # Redundant static specific
        # 'device_b_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # 'red_up_time': random.randint(20, 250),
        # 'red_fault_time': random.randint(10, 250),
        # 'tx_level_adj': random.randint(-10, 10),
        # # Smart specific
        # 'sr_controller': 'sr_controller:0',
        # 'sr_priority': random.randint(0, 100),
        # 'dyn_license': 1,
        # 'license_group': random.randint(1, 8),
        # Teleport specific
        'teleport': f'teleport:0',
        'tx_10m': random.choice([*CheckboxStr()]),
        'tx_dc_power': random.choice([*CheckboxStr()]),
        'rx_10m': random.choice([*CheckboxStr()]),
        'rx_dc_power': CheckboxStr.ON,
        'rx_voltage': random.choice([*RxVoltageStr()]),
        # Modulator specific
        'tx_frq': random.randint(950000, 33000000),
        'tx_sr': random.randint(300, 200000),
        'tx_pilots': random.choice([*CheckboxStr()]),
        'tx_rolloff': random.choice([*RollofModesStr()]),
        # 'acm_enable': 1,
        'tx_modcod': ModcodModes.SF_QPSK_1_2,
        # 'acm_mc2': ModcodModes.SF_QPSK_3_5,
        # 'acm_mc3': ModcodModes.SF_QPSK_2_3,
        # 'acm_mc4': ModcodModes.SF_QPSK_3_4,
        # 'acm_mc5': ModcodModes.SF_QPSK_4_5,
        # 'acm_mc6': ModcodModes.SF_QPSK_5_6,
        # 'acm_mc7': ModcodModes.SF_QPSK_8_9,
        # 'acm_mc8': ModcodModes.SF_8PSK_5_6,
        # 'acm_thr': 2,
        'mod_queue1': 3000,
        'mod_queue2': 2000,
        'mod_queue3': 1500,
        'mod_queue4': 900,
        'mod_queue5': 450,
        'mod_queue6': 150,
        'mod_queue7': 60,
        'mod_que_ctl': 100,
        # Modulator transmission
        'tx_on': random.choice([*CheckboxStr()]),
        'tx_level': random.randint(1, 46),
        'tlc_enable': CheckboxStr.OFF,
        # 'tlc_max_lvl': random.randint(1, 46),
        # 'tlc_net_own': random.randint(0, 16),
        # 'tlc_avg_min': random.randint(0, 16),
        # 'tlc_cn_stn': 15,
        # Demodulator 1 section
        'rx1_input': random.choice([*DemodulatorInputModesStr.RX1]),
        'rx1_frq': random.randint(950000, 33000000),
        # Protocols section
        'ip_screening': random.choice([*IpScreeningModesStr.OFF]),
        'dns_caching': CheckboxStr.ON,
        'dns_timeout': random.randint(1, 60),
        'arp_timeout': random.randint(1, 30),
        'proxy_arp': CheckboxStr.ON,
        'tftp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'tftp_vlan': random.randint(0, 4095),
        'mcast_mode': McastModesStr.STATIC,
        # 'mcast_timeout': random.randint(1, 30),
        'sntp_mode': SntpModes.CLIENT,
        'sntp_vlan': random.randint(0, 4095),
        'sntp_server': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'ctl_protect': CheckboxStr.OFF,
        # 'ctl_key': random.randint(1, 256),
        # SNMP section
        'snmp_mode': SnmpModesStr.V1_V2C,
        'access1_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        'access2_ip': ".".join(map(str, (random.randint(0, 255) for _ in range(4)))),
        # 'snmp_auth': SnmpAuth.AUTH_PRIV,
        # 'snmp_user': 'testUser2',
        'snmp_read': 'easy1235',
        'snmp_write': 'easy5321',
        # DHCP section
        'dhcp_mode': DhcpModesStr.ON,
        'dhcp_vlan': random.randint(0, 4095),
        'dhcp_ip_start': '172.16.0.2',
        'dhcp_ip_end': '172.16.255.254',
        'dhcp_mask': '/16',
        'dhcp_gateway': '172.16.0.1',
        'dhcp_dns': '192.16.113.8',
        'dhcp_timeout': '65234',
        'dhcp_helper': '172.16.0.1',
        'dhcp_local_ip': '172.16.0.1',
        # NAT section
        'nat_enable': CheckboxStr.OFF,
        # 'nat_ext_ip': '198.15.67.2',
        # 'nat_int_ip': '192.168.200.0',
        # 'nat_int_mask': '/24',
        # RIP section
        'rip_mode': RipModes.OFF,
        # 'rip_update': random.randint(10, 250),
        # 'rip_timeout': random.randint(30, 3600),
        # 'rip_cost': random.randint(1, 16),
        # 'rip_auth': 1,
        # 'rip_pass': 'qwerty999',
        # 'rip_omit_down': 1,
        # 'rip_omit_sm': 1,
        # TCPA section
        'tcpa_enable': CheckboxStr.ON,
        'tcpa_version': TcpaVersionStr.V3_4,
        'from_svlan': '1094',
        'to_svlan': '2095',
        'sessions': '98',
        'tcpa_mss': '1440',
        'max_rx_win': '30200',
        'rx_win_upd': '205',
        'buf_coef': '9',
        'max_pkts': '250',
        'max_qlen': '930',
        'retry_time': '11',
        'tcpa_retries': '13',
        'tcpa_timeout': '8',
        'ack_period': '77',
        # Service monitoring section
        'sm_enable': CheckboxStr.OFF,
        # 'sm_interval': '13',
        # 'sm_losts': '3',
        # 'poll_enable1': '1',
        # 'poll_ip1': '127.0.0.1',
        # 'poll_vlan1': '3097',
        # 'chk_delay1': '1',
        # 'max_delay1': '1280',
        # 'poll_enable2': '1',
        # 'poll_ip2': '10.0.4.19',
        # 'poll_vlan2': '4001',
        # 'chk_delay2': '1',
        # 'max_delay2': '1320',
        # 'lan_rx_check': LanCheckModesStr.HIGHER,
        # 'rx_check_rate': '32128',
        # 'lan_tx_check': LanCheckModesStr.LOWER,
        # 'tx_check_rate': '9862',
        # 'bkp_enable': '1',
        # 'bkp_ip': '10.0.2.1',
        # 'auto_reboot': '1',
        # 'reboot_delay': '182',
    }
}
